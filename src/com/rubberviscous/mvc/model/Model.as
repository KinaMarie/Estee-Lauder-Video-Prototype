package com.rubberviscous.mvc.model{	import flash.display.*	import flash.events.*;	import flash.utils.*;	import flash.geom.*;	import flash.net.*;	import com.rubberviscous.state.*;		public class Model extends EventDispatcher implements IModel	{		protected var sApplicationState:String;		public var XMLCOMPLETE:String = 		"xmlcomplete";		public var LOAD_VIDEO:String = 			"loadvideo";		public var HOTSPOT:String = 			"hotspot";		public var SHARE:String = 				"share";		public var COMMENT:String = 			"comment";		public var RATING:String = 				"rating";		public var VIDEOHOTSPOT:String =		"videohotspot";		public var MIRROR:String =				"mirror";		public var INFOHOTSPOT:String = 		"infohotspot";		public var PRODUCTHOTSPOT:String = 		"producthotspot";		public var SHARETHELOOK:String = 		"sharethelook";		public var TABVIEW:String = 			"tabview";		public var PLAYLIST:String = 			"playlist";		public var VIDEOFULL:String = 			"videofull";		public var VIDEO:String = 				"video";		public var METADATARECEIVED:String = 	"cuepointsreceived";		public var REMOVECUEMARKERS:String =	"removecuemarkers"		private var videoURL:String// = 	"videos/Asia_06_SimpleSmoky_FINAL-H264_1_2.f4v";	//	private static const xmlURL:String =	"data/derek_lam_spring_show.xml";	//	private static const xmlURL:String =	"data/smoky_eyes.xml";		private static const xmlURL:String =	"data/fatigue_fighter.xml";		private var xml:XML;		private var videoStatus:String;		private var videoDuration:Number;		private var videoTime:Number;		private var cuepointName:String;		private var currentVideoView:String = "Video1View";		private var videoWidth:Number = 640;		private var videoHeight:Number = 360;		private var cuePoints:Array;		private var cuepointLabel:String;		private var cuepointXY:Point = new Point();		private var cuepointAction:String;				public function Model()		{			//setTimeout(init,1000);			init();		}				public function init():void		{			//setApplicationState(LOAD_VIDEO);			//			var loader:URLLoader = new URLLoader();			loader.addEventListener(Event.COMPLETE, loadXML);			loader.load(new URLRequest(xmlURL));		}				private function loadXML(e:Event):void		{			xml = new XML(e.target.data);			trace(xml.@url);			videoURL = xml.@url;			setApplicationState(XMLCOMPLETE);		}				protected function update():void		{			dispatchEvent(new Event(Event.CHANGE)); // dispatch event		}				public function getApplicationState():String		{			return this.sApplicationState;		}				public function setApplicationState(aApplicationState:String):void		{			this.sApplicationState = aApplicationState;			this.update();			this.sApplicationState = null;		}				public function getVideoURL():String		{			return videoURL;		}				public function setVideoURL(aURL:String):void		{			videoURL = aURL;		}				public function setVideoStatus(aStatus:String):void		{			videoStatus = aStatus;			trace("model : setVideoStatus = "+videoStatus)			//this.update();			//videoStatus = null;		}				public function getVideoStatus():String		{			return videoStatus;		}				public function getVideoDuration():Number		{			return videoDuration;		}				public function setVideoDuration(aDuration:Number):void		{			videoDuration = aDuration;		}				public function getVideoTime():Number {			return videoTime;		}				public function setVideoTime(aTime:Number):void {			videoTime = aTime;		}				public function getCuepointName():String		{			return cuepointName;		}				public function setCuepointName(aName:String):void		{			cuepointName = aName;		}				public function setVideoView(aView:String):void		{			currentVideoView = aView;			this.update();		}				public function getVideoView():String		{			return currentVideoView;		}				public function getVideoWidth():Number		{			return videoWidth;		}				public function getVideoHeight():Number		{			return videoHeight;		}				public function getCuePoints():Array		{			return cuePoints;		}				public function setCuePoints(aCuePoints:Array):void		{			cuePoints = aCuePoints;		}				public function getXML():XML		{			return xml;		}				public function setCuepointLabel(aLabel:String):void		{			cuepointLabel = aLabel;		}				public function getCuepointLabel():String		{			return cuepointLabel;		}				public function getCuepointXY():Point		{			return cuepointXY;		}				public function setCuepointXY(aPoint:Point):void		{			cuepointXY = aPoint;		}				public function getCuepointAction():String		{			return cuepointAction;		}				public function setCuepointAction(aLabel:String):void		{			cuepointAction = aLabel;		}	}}